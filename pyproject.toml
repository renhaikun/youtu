[project]
name = "Youtu-agent"
version = "0.1.1"
description = "Youtu-Agent is a simple but powerful framework for building, running, and evaluating agents."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiofiles>=24.1.0",
    "aiohttp>=3.12.15",
    "art>=6.5",
    "arxiv>=2.2.0",
    "chunkr-ai>=0.1.0",
    "colorlog>=6.9.0",
    "docker>=7.1.0",
    "google-genai>=1.26.0",
    "hydra-core>=1.3.2",
    "ipython>=9.5.0",
    "jinja2>=3.1.6",
    "matplotlib>=3.10.3",
    "mcp>=1.12.3",
    # https://github.com/openai/openai-agents-python/issues/1395 | openai==1.97.1 & openai-agents==0.2.5
    "openai==1.99.6",
    "openai-agents==0.2.8",
    # https://github.com/Arize-ai/openinference/tree/main/python/instrumentation/openinference-instrumentation-openai
    "openinference-instrumentation-openai>=0.1.30",
    "openinference-instrumentation-openai-agents>=1.1.1",
    "openpyxl>=3.1.5",
    "pandas>=2.3.0",
    "pexpect>=4.9.0",
    "prompt-toolkit>=3.0.52",
    "psycopg2-binary>=2.9.10",
    "requests>=2.32.4",
    "rich>=14.1.0",
    "sqlmodel>=0.0.24",
    "tiktoken>=0.9.0",
    "toml>=0.10.2",
    "wikipedia-api>=0.8.1",
]

[project.optional-dependencies]
litllm = [
    "litellm>=1.77.0",
]

[dependency-groups]
dev = [
    "arize-phoenix-client>=1.14.1",
    "arize-phoenix-otel>=0.11.0",
    # datasets == 4.0.0 remove scripts, https://github.com/huggingface/datasets/issues/7693
    "datasets==3.6.0",
    "gradio>=5.42.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.16",
    "mkdocstrings[python]>=0.30.0",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.12.8",
    # "tencentcloud-sdk-python>=3.0.1425",
    "tornado>=6.5.2",
]
documents = [
    "pymupdf>=1.26.3",
]
gaia = [
    "astor>=0.8.1",
    "docx2markdown>=0.1.1",
    "nest-asyncio>=1.6.0",
    "openpyxl>=3.1.5",
    "pillow>=11.3.0",
    "pydub>=0.25.1",
    "pymupdf>=1.26.3",
    "retry>=0.9.2",
    "tabulate>=0.9.0",
    "unstructured[docx,pptx]>=0.18.14",
    "validators>=0.35.0",
    "xls2xlsx>=0.2.0",
    "xmltodict>=0.15.0",
]
python-executor = [
    "chardet>=5.2.0",
    "matplotlib>=3.10.3",
    "pandas>=2.3.1",
    "scipy>=1.16.1",
    "seaborn>=0.13.2",
]
search = [
    "crawl4ai>=0.7.4",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["utu"]


[tool.pytest.ini_options]
pythonpath = "."
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
asyncio_default_test_loop_scope = "session"

log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
addopts = [
    "-v", "-s",
]

[tool.uv]
index-url = "https://pypi.org/simple"
# extra-index-url = [
#     "https://mirrors.tencent.com/repository/pypi/tencent_pypi/simple",
# ]

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [
    "**/*.pyi",
    ".*",
    "configs/",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
isort = { combine-as-imports = true, known-first-party = ["utu"] }

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.mypy]
strict = true
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_untyped_calls = false

# [tool.pylint.messages_control]
# disable = ["broad-except", "bare-except", "invalid-name"]
